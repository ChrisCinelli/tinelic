<!DOCTYPE html>
<html lang="en">
<head>
{#_t_env_production}
<script src="//code.jquery.com/jquery-2.1.3.min.js"></script>
<script src="{_t_prefix}/js/build/tinelic.js?rev={_t_rev}"></script>
{:else}
<script src="{_t_prefix}/app/rum.js"></script>
<script src="//code.jquery.com/jquery-2.1.3.js"></script>
<script src="{_t_prefix}/js/raven.js"></script>
{/_t_env_production}
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="{_t_prefix}/css/style.css?rev={_t_rev}" rel="stylesheet">
<script>
(function () {
	var _t_page = new Date();
	Tinelic.config({
		url:location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : ''),
		project:"{_t_self_id}",
		route:"{_t_route}",
		_dtp:_t_page,
		ajaxCallback: function(s, XHR){
			var re=/(^\/restapi\/[A-Za-z]+[0-9]+\w+\/)|(^\/restapi\/[0-9]+[A-Za-z]+\w+\/)/;
			s.r=s.r.replace(/\/wire\/w[0-9]+/,"/wire")
				.replace(/^\/restapi\/([^\/]+)\//,"/restapi/token/")
				.replace(re,"/restapi/");
		}
	});
	Raven.config(location.protocol + '//nah@' + location.hostname + (location.port ? ':' + location.port : '')+'/collect/sentry/{_t_self_id}', {
		dataCallback: function(data) {
			data._dtp = _t_page;
			data._dt = new Date();
			return data;
		}
	}).install();
})();
</script>
</head>
<body id="content">
{@view name=_t_main_view /}

{#_t_env_production}
<script src="{_t_prefix}/js/build/require.js?rev={_t_rev}"></script>
<script src="{_t_prefix}/js/build/app.js?rev={_t_rev}"></script>
<script src="{_t_prefix}/js/build/routes/main.js?rev={_t_rev}"></script>
{:else}
<script src="{_t_prefix}/app/require.js"></script>
{/_t_env_production}

<script>
	requirejs.config({
		baseUrl: "{_t_prefix}/app",
		paths:{
			"tinybone":"../tinybone",
			"lodash":"../js/lodash",
			"dust":"../js/dust",
			"md5":"../js/md5",
			"dust-helpers":"../js/dust-helpers",
			"safe":"../js/safe",
			"highcharts":location.protocol+"//code.highcharts.com/highcharts",
			"moment":"../js/moment",
			"dustc":"../tinybone/dustc",
			"text":"../js/text",
			"jquery-cookie": "../js/jquery-cookie",
			"jquery.blockUI": "../js/jquery.blockUI",
			"bootstrap":"../js/bootstrap"
		},
		shim: {
			'dust-helpers': {
        				deps: ['dust'],
        				exports: 'helpers'
        			},
			'dust': {
				exports: 'dust'
			}
		}
	});
	requirejs.onError = function (err) {
		console.log(err.trace);
	};
	define("backctx","/restapi/");
	define("jquery", [], function() {
		return window.jQuery;
	});

	$.getJSON("/web/app/wire/{_t_unique}", function (wire) {
		requirejs(["app"], function (App) { (new App()).init(wire); })
	})
{#_t_env_production}
{:else}
	// error simulation
	var _t_page = new Date();
	setTimeout(function () {
		if (_t_page.valueOf()%2) {
			throw new Error("Test Error"+(new Date()).getDay());
		};
	},1000);
	if (_t_page.valueOf()%2) {
		throw new Error("Test Error1"+(new Date()).getDay());
	};
{/_t_env_production}
</script>
</body>
</html>
